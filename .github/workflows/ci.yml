name: Build and Release

on:
  push:
    #branches:
    #  - 'main'
    tags:
      - 'v*'

jobs:
  build:
    name: Build binaries
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.4'

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=1.0.0" >> $GITHUB_ENV
        #run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Build binaries
        run: make build-all VERSION=${{ env.VERSION }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: kubensage-agent-binaries
          path: go-builds/

#  release:
#    name: Create GitHub Release
#    needs: build
#    runs-on: ubuntu-latest
#    if: startsWith(github.ref, 'refs/tags/')
#
#    steps:
#      - name: Download build artifacts
#        uses: actions/download-artifact@v4
#        with:
#          name: kubensage-agent-binaries
#          path: go-builds
#
#      - name: Create GitHub Release
#        uses: softprops/action-gh-release@v2
#        with:
#          name: Release ${{ github.ref_name }}
#          files: go-builds/*
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






#name: Create and publish a Docker image
#
#on:
#  push:
#    branches: [ 'main' ]
#
#env:
#  REGISTRY: ghcr.io
#  IMAGE_NAME: ${{ github.repository }}
#
#jobs:
#  build-and-push-image:
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: read
#      packages: write
#      attestations: write
#      id-token: write
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Log in to the Container registry
#        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Extract metadata (tags, labels) for Docker
#        id: meta
#        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
#
#      - name: Build and push Docker image
#        id: push
#        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
#
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v2
#        with:
#          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
#          subject-digest: ${{ steps.push.outputs.digest }}
#          push-to-registry: true