name: Build & Release

on:
  pull_request:
    branches: [ "main" ]
    types: [ opened, synchronize, reopened, closed ]

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: "1.24.4"

jobs:
  build-and-test:
    if: ${{ github.event.action != 'closed' && startsWith(github.head_ref, 'release/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install protoc (protobuf-compiler)
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Install Go protobuf plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$HOME/go/bin" >> "$GITHUB_PATH"

      - name: Extract version from branch name
        run: |
          VERSION="${GITHUB_HEAD_REF#release/v}"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "Extracted VERSION=$VERSION"

      - name: Build with Makefile
        run: make build
        env:
          VERSION: ${{ env.VERSION }}

  tag-and-release:
    if: ${{ github.event.action == 'closed'
      && github.event.pull_request.merged == true
      && github.event.pull_request.base.ref == 'main'
      && startsWith(github.event.pull_request.head.ref, 'release/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main (post-merge)
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: Extract version from PR head branch
        run: |
          VERSION="${{ github.event.pull_request.head.ref }}"
          VERSION="${VERSION#release/v}"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "Extracted VERSION=$VERSION"

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true

      - name: Install protoc (protobuf-compiler)
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Install Go protobuf plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          echo "$HOME/go/bin" >> "$GITHUB_PATH"

      - name: Build with Makefile
        run: make build
        env:
          VERSION: ${{ env.VERSION }}

      - name: Create Git Tag (idempotente)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "v${VERSION}"
          git push origin "v${VERSION}"

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: kubensage-agent-${{ env.VERSION }}
          path: build

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body: |
            ðŸŽ‰ Release v${{ env.VERSION }}
            - Generated from branch `${{ github.event.pull_request.head.ref }}`
          files: build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
